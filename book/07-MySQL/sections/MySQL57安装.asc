=== MySQL57安装

==== 新增Yum仓库

.新增Yum仓库
[source, bash]
----
yum install -y https://dev.mysql.com/get/mysql80-community-release-el7-7.noarch.rpm
----

.导入公钥
[source, bash]
----
rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-mysql*
----

.默认禁用MySQL仓库
[source, bash]
----
yum-config-manager --disable mysql-connectors-community | egrep '(\[mysql-connectors-community\])|enabled'
yum-config-manager --disable mysql-tools-community | egrep '(\[mysql-tools-community\])|enabled'
yum-config-manager --disable mysql80-community | egrep '(\[mysql80-community\])|enabled'
----

TIP: _按需单独启用MySQL仓库_

==== 安装MySQL57

[source, bash]
----
yum --enablerepo=mysql57-community install -y mysql-community-server
----

==== 初始化MySQL57

.设置日志
[source, bash]
----
mkdir -p /var/log/mysqld
touch /var/log/mysqld/error.log
chown -R mysql:mysql /var/log/mysqld

crudini --set --existing /etc/my.cnf mysqld log-error /var/log/mysqld/error.log
----

.设置MySQL数据目录
[source, bash]
----
mkdir -p /data/mysql

crudini --set --existing /etc/my.cnf mysqld datadir /data/mysql
----

==== 配置MySQL57

[source, bash]
----
crudini --set /etc/my.cnf mysqld default-storage-engine InnoDB
crudini --set /etc/my.cnf mysqld disabled_storage_engines '"MyISAM"'

crudini --set /etc/my.cnf mysqld bind-address 0.0.0.0
crudini --set /etc/my.cnf mysqld max_connections 1000

crudini --set /etc/my.cnf mysqld general_log OFF
crudini --set /etc/my.cnf mysqld general_log_file /var/log/mysqld/general.log

crudini --set /etc/my.cnf mysqld long_query_time 3
crudini --set /etc/my.cnf mysqld slow_query_log ON
crudini --set /etc/my.cnf mysqld slow_query_log_file /var/log/mysqld/slow_query.log

# 开启兼容模式，兼容老MySQL代码，比如使用空字符串代替NULL插入数据
crudini --set /etc/my.cnf mysqld sql_mode '""'

crudini --set /etc/my.cnf mysqld skip-name-resolve 'OFF'

crudini --set /etc/my.cnf mysqldump max_allowed_packet 100M
echo "quick" >> /etc/my.cnf
echo "quote-names" >> /etc/my.cnf
----

.开机启动MySQL
[source, bash]
----
systemctl enable mysqld
----

.启动MySQL服务
[source, bash]
----
systemctl start mysqld
----

.查看MySQL服务状态
[source, bash]
----
systemctl status mysqld
----

.终端输出
....
● mysqld.service - MySQL Server
   Loaded: loaded (/usr/lib/systemd/system/mysqld.service; enabled; vendor preset: disabled)
   Active: active (running) since Fri 2023-09-15 22:11:05 CST; 9s ago
     Docs: man:mysqld(8)
           http://dev.mysql.com/doc/refman/en/using-systemd.html
  Process: 28577 ExecStart=/usr/sbin/mysqld --daemonize --pid-file=/var/run/mysqld/mysqld.pid $MYSQLD_OPTS (code=exited, status=0/SUCCESS)
  Process: 28540 ExecStartPre=/usr/bin/mysqld_pre_systemd (code=exited, status=0/SUCCESS)
 Main PID: 28580 (mysqld)
   CGroup: /system.slice/mysqld.service
           └─28580 /usr/sbin/mysqld --daemonize --pid-file=/var/run/mysqld/mysqld.pid

Sep 15 22:11:04 gitlab_a_test systemd[1]: Starting MySQL Server...
Sep 15 22:11:05 gitlab_a_test systemd[1]: Started MySQL Server.
....

==== 修改密码

_临时密码有不常用的特殊字符，不便日常管理。不降低安全性的前提性，更改MySQL密码_
[source, bash]
----
MYSQL_TMP_ROOT_PASSWORD=$(grep 'A temporary password' /var/log/mysqld/error.log | tail -n 1 | awk '{print $NF}')

export BY_MYSQL_ROOT_PASSWORD=$(pwgen -csnB 10)_$(pwgen -csnB 10)
# 永久保存临时配置（重新登录或重启都有效）
sed -i '/export BY_/d' ~/.bash_profile && env | grep BY_ | awk '{print "export "$1}' >> ~/.bash_profile

echo -e "  MySQL用户名：root\nMySQL临时密码：${MYSQL_TMP_ROOT_PASSWORD}\n  MySQL新密码：${BY_MYSQL_ROOT_PASSWORD}"

mysqladmin -uroot -p"${MYSQL_TMP_ROOT_PASSWORD}" password ${BY_MYSQL_ROOT_PASSWORD}
----

.终端输出
....
  MySQL用户名：root
MySQL临时密码：ABCpt*aQ9:k4
  MySQL新密码：sSU9vdfRUP_i7nLFrcYFF
....

==== 本机无密码登录设置

===== 脚本无人化配置（自动输入密码）

. 执行脚本
+
[source, bash]
----
unbuffer expect -c "
spawn mysql_config_editor set --skip-warn --login-path=client --host=localhost --user=root --password
expect -nocase \"Enter password:\" {send \"${BY_MYSQL_ROOT_PASSWORD}\n\"; interact}
"
----
+
.终端输出
....
spawn mysql_config_editor set --skip-warn --login-path=client --host=localhost --user=root --password <1>
Enter password: 
....
+
<1> 注意 `--login-path` 参数值为 *client*，表示可以这样（`mysql --login-path=client`）无密码执行MySQL命令

. 查看MySQL无密码配置清单
+
[source, bash]
----
mysql_config_editor print --all
----
+
.终端输出
....
[client] <1>
user = "root"
password = *****
host = "localhost"
....
+
<1> 此处的名称必须与前文的 `--login-path=client` 一致，都是 `client`

===== 无密码登录测试

现在，可以不带用户名称及密码在终端执行 `mysql` 命令了。比如，查看数据库列表：
[source, bash]
----
mysql -e "show databases;"
----

.终端输出
....
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
....

[TIP]
====
当 `--login-path` 值为 *client* 时，可以省略此参数。 不省略时，完整命令如下：

`mysql --login-path=client -e "show databases;"`
====

==== 卸载密码插件

默认的密码复杂度要求太高，卸载之：

[source, bash]
----
mysql -e "uninstall plugin validate_password;"
----

