=== 常用命令

==== 烤机必备

从0设备到空设备持续写入，会占用单核100%：

[source, bash]
dd if=/dev/zero of=/dev/null

如果不够，多来几个就行。

==== find分别查找目录和文件

.修改当前路径所有目录的权限
[source, bash]
find . -type d|xargs  -d '\n' chmod 755

.修改当前路径所有文件的权限
[source, bash]
find . -type f|xargs  -d '\n' chmod 644

TIP: 由于 `xargs` 默认使用空格为分隔符，导致目录或文件中有空格时无法正常使用。


==== 创建用于运行服务的用户

[source, bash]
useradd --comment  "Python User" --user-group --no-create-home --shell /usr/bin/nologin  python

==== 仅修改子目录中的文件权限，忽略目录

[source, bash]
find . -type f -exec chmod 644 -- {} +

==== 跨行替换文件内容

需要将

    INSERT INTO `tb1` VALUES (1, 607);
    INSERT INTO `tb1` VALUES (2, 1851);

替换为

    INSERT INTO `tb1` VALUES (1, 607)，(2, 1851);

[source, bash]
perl -i -p -E 'BEGIN{undef $/;} s/;\r\nINSERT INTO `[a-zA-Z0-9_]+` VALUES \(/, \(/smg' unilive.sql.test

==== Nginx日志按日期排序

    foo.com 443 38.112.15.172 - - [24/Oct/2023:13:26:53 +0800] "GET / HTTP/1.0" 200 0.001 19023 "https://foo.com/" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.5195.127 Safari/537.36"

[source, bash]
----
sort -t ' ' \
    -k 6.2,6.3n \
    -k 6.5,6.7M \
    -k 6.9,6.12n \
    -k 6.14,6.15n \
    -k 6.17,6.18n \
    -k 6.20,6.21n \
    access.log
----

参数说明::
-t::: 以空格分列，针对第六列 `[24/Oct/2023:13:26:53` 做排序操作
-k::: 排序关键字，参数值格式：`"开始列号[排序规则],结束列号[排序规则]"`。 比如，`1n,1n` 表示从第1列行首开始到第1列行尾结束，都以数字规则 `"n"` 排序。按前后顺序，参数分别表示： +
* 日期（如 `24`）按数字排序
* 月份（如 `Oct`）按英文月份缩写排序
* 年份（如 `2023`）按数字排序
* 小时（如 `13`）按数字排序
* 分钟（如 `26`）按数字排序
* 秒（如 `53`）按数字排序

